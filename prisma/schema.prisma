generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

enum LoginProvider {
    CREDENTIALS
}

model Profile {
    id       String        @id
    name     String        @db.VarChar(100)
    email    String        @db.VarChar(150)
    provider LoginProvider @default(CREDENTIALS)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@map("profiles")
}

model Customer {
    id      String  @id @default(cuid())
    name    String  @db.VarChar(150)
    email   String? @unique @db.VarChar(150)
    address String  @db.VarChar(255)
    phone   String  @db.VarChar(20)
    orders  Order[]

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@map("customers")
}

model Product {
    id          String  @id @default(cuid())
    name        String  @db.VarChar(150)
    slug        String
    price       String  @db.VarChar(50)
    description String? @db.Text

    product_category    ProductCategory? @relation(fields: [product_category_id], references: [id])
    product_category_id String

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@map("products")
}

model ProductCategory {
    id          String  @id @default(cuid())
    name        String  @unique @db.VarChar(150)
    slug        String  @unique
    description String? @db.Text

    products Product[]

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@map("product_categories")
}

enum OrderStatus {
    PENDING
    SUCCESS
}

model Order {
    id           String      @id @default(cuid())
    label        String      @db.VarChar(100)
    description  String?     @db.Text
    total_amount String
    order_status OrderStatus @default(PENDING)

    order_category_id String
    order_category    OrderCategory @relation(fields: [order_category_id], references: [id])
    customer_id       String?
    customer          Customer?     @relation(fields: [customer_id], references: [id])

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@map("orders")
}

model OrderCategory {
    id          String  @id @default(cuid())
    name        String  @db.VarChar(150)
    slug        String
    description String? @db.Text

    orders Order[]

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    @@map("order_categories")
}
